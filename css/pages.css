/*
    Navigation Logic

    This uses the `:target` pseudo-class to find the active page, then override
    the corresponding rules in `#root`.

    Hopefully, this code will be simplified once `:has()` is stable in Firefox.
    Currently, depending on the active page, we override rules in `#root`. This means
    we have to specify rules for each individual page, even if they do the same thing,
    leading to a lot of repeated/very similar code.
*/

#page-projects:target ~ #root {
    #navbar > .navbar-item[href="#page-projects"] > .navbar-icon {
        font-variation-settings: "FILL" 1;

        &::before {
            opacity: var(--press-opacity);
        }
    }

    #projects-content {
        display: block;
    }
}
#page-blog:target ~ #root {
    #navbar > .navbar-item[href="#page-blog"] > .navbar-icon {
        font-variation-settings: "FILL" 1;

        &::before {
            opacity: var(--press-opacity);
        }
    }

    #blog-content {
        display: block;
    }
}
#page-settings:target ~ #root {
    #navbar > .navbar-item[href="#page-settings"] > .navbar-icon {
        font-variation-settings: "FILL" 1;

        &::before {
            opacity: var(--press-opacity);
        }
    }

    #settings-content {
        display: block;
    }
}

/* Prevent home from being active while another page is */

#page-projects:target,
#page-blog:target,
#page-settings:target {
    ~ #root > #navbar > .navbar-item[href="#page-home"] > .navbar-icon {
        font-variation-settings: "FILL" 0;

        &:not(:hover)::before {
            opacity: 0;
        }
    }

    ~ #root > #home-content {
        display: none;
    }
}

/*
    The home page is highlighted by default. When the user first loads the page,
    there won't be a target element, so we can't use that same trick for
    highlighting it. Instead, it's highlighted by default and then other pages
    will un-highlight it.
*/
#navbar > .navbar-item[href="#page-home"] > .navbar-icon {
    font-variation-settings: "FILL" 1;

    &::before {
        opacity: var(--press-opacity);
    }
}

#home-content {
    display: block;
}
